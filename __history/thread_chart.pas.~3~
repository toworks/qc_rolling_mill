unit thread_chart;

interface

uses
  SysUtils, Classes, Windows, ActiveX;

type
  //Здесь необходимо описать класс TViewThread:
  TThreadChart = class(TThread)

  private
    { Private declarations }
  protected
    procedure Execute; override;
  end;

var
  ThreadChart: TThreadChart;
  function ViewThreadInit: bool;
  procedure Wrapper;//обертка для синхронизации и выполнения с другим потоком



implementation

uses
  main, sql_module, chart, thread_sql;




procedure TThreadChart.Execute;
var
  i:integer;
  e:bool;
begin
  CoInitialize(nil);
  while True do
   begin
      Synchronize(Wrapper);
      sleep(1000);
   end;
   CoUninitialize;
end;


function ViewThreadInit: bool;
begin
        //создаем поток
        ThreadChart:=TThreadChart.Create(False);
        ThreadChart.Priority:=tpNormal;
        ThreadChart.FreeOnTerminate := True;
//        CheckThread.Start;
end;


procedure Wrapper;
begin
      ViewsCharts;
end;




end.
